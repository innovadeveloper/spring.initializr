@Library(['JenkinsSharedLibraryOfficial'])

import org.jenkinsci.plugins.workflow.steps.*

def deployPath = "/devops/{{deployDevFileName}}"

node('ubuntu-dev'){
    stage('Preparation') {
        // Configurar variables de entorno para las rutas de Maven y JDK
        env.M2_HOME = tool 'maven_3_8_8'
        env.JAVA_HOME = tool 'jdk_1_17_0'
        env.PATH = "${env.M2_HOME}/bin:${env.JAVA_HOME}/bin:${env.PATH}"
    }

    stage('Clone Project') {
        deleteDir()
        checkout scm
        sh 'ls -l'
        echo "Rama : ${gitUtils.getGitBranchName()}"
        echo "Repo URL : ${gitUtils.getGitUrl()}"
    }

    stage('Check and Read Files') {
        // obtener la ruta actual
        def projectName = deployUtils.readAndCheckConfigurationFiles(deployPath)
        echo "project Name : $projectName"
    }

    stage('Build & Test') {
        // compilar el proyecto
        compilerUtils.buildWithMaven(["-U", "-X"], true, true)
    }

    stage('Delivery') {
        deployUtils.deployToArtifactory(deployPath)
    }

    stage('Deploy') {
        // compilar el proyecto
        deployUtils.generateAndDeployWithKubernetes(deployPath)
    }
}
